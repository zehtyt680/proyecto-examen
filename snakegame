package login2bv;

import javax.swing.JLabel;
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.util.ArrayList;
import java.util.Timer;
import java.util.TimerTask;
import java.util.Arrays;
import java.util.List;



public class Snake extends javax.swing.JInternalFrame implements KeyListener {
int snake = -1;
boolean valido = true, activado = false, co = false;
int direccion, puntos = 0, contador;
Point ultimo;
int x,y;
    public Snake() {
        initComponents();
        
        setSize(500,500);
        
        x = (int)Math.floor(Math.random()*23);
        y = (int)Math.floor(Math.random()*23);
         
        jPanel2.setBounds(0,0,500,500);
        JButton cabeza=new JButton();
        List<JButton> serp=new ArrayList<>();
        List<Point> PartesSerp=new ArrayList<>();
        cabeza.setBounds(x*20,y*20,20,20);
        cabeza.setContentAreaFilled(false);
        cabeza.setOpaque(true);
        cabeza.setBackground(new Color(103,156,221));
        cabeza.addKeyListener((KeyListener) this);
        
        
       jLabel1.add(cabeza);
       JButton comida=new JButton();
        comida.setBounds(x*20,y*20,20,20);
        comida.setContentAreaFilled(false);
        comida.setOpaque(true);
        comida.setBackground(new Color(234,129,84));
        comida.addKeyListener((KeyListener) this);
        jPanel2.add(comida);
        jLabel1.addKeyListener((KeyListener) this);
        
        Timer p= new Timer();
        TimerTask movimiento=new TimerTask(){
            @Override
            public void run() {
                co = false;
                contador = 0 ;
                jLabel1.setText("Puntos" + puntos);
                PartesSerp.add(cabeza.getLocation());
                activado = false;
                int tamano = PartesSerp.size();
                for (int i = 0; i <= tamano-1; i++) {
                    if (PartesSerp.size()==serp.size()){
                    break;
                    }
                    PartesSerp.remove(0);
                }
                switch(direccion){
                case 1:
                    cabeza.setLocation(cabeza.getX()+20,cabeza.getY());
                    if (cabeza.getX()>=comida.getX()&cabeza.getX()<=comida.getX()+20){
                    if (cabeza.getY()>=comida.getY()&cabeza.getX()<=comida.getX()+20){
                    PartesSerp.add(cabeza.getLocation());
                    serp.add(new JButton());
                    snake++;
                    serp.get(snake).setContentAreaFilled(false);
                    serp.get(snake).setOpaque(true);
                    serp.get(snake).setBounds(new Rectangle (PartesSerp.get(snake),new Dimension(20,20)));
                    jPanel2.add(serp.get(snake));
                    
                    
                    for (int e =0; e <=serp.size()-1; e++){
                    x = (int)Math.floor(Math.random()*23);
                    y = (int)Math.floor(Math.random()*23);
                    
                    valido = (new Point (x*20,y*20).equals(serp.get(e).getLocation()));
                    if (!valido)break;
                    }
                   
                    comida.setLocation(x*20,y*20);
                    puntos++;
                    co=true;
                    }
                  }
                  break;
                    case 2:
                    cabeza.setLocation(cabeza.getX()-20,cabeza.getY());
                    if (cabeza.getX()>=comida.getX()&cabeza.getX()<=comida.getX()+20){
                    if (cabeza.getY()>=comida.getY()&cabeza.getX()<=comida.getX()+20){
                    PartesSerp.add(cabeza.getLocation());
                    serp.add(new JButton());
                    snake++;
                    serp.get(snake).setContentAreaFilled(false);
                    serp.get(snake).setOpaque(true);
                    serp.get(snake).setBounds(new Rectangle (PartesSerp.get(snake),new Dimension(20,20)));
                    jPanel2.add(serp.get(snake));
                    
                    
                    for (int e =0; e <=serp.size()-1; e++){
                    x = (int)Math.floor(Math.random()*23);
                    y = (int)Math.floor(Math.random()*23);
                    
                    valido = (new Point (x*20,y*20).equals(serp.get(e).getLocation()));
                    if (!valido)break;
                    }
                     
                    comida.setLocation(x*20,y*20);
                    puntos++;
                    co=true;
                    }
                  }
                  break;
                    case 3:
                    cabeza.setLocation(cabeza.getX(),cabeza.getY()+20);
                    if (cabeza.getX()>=comida.getX()&cabeza.getX()<=comida.getX()+20){
                    if (cabeza.getY()>=comida.getY()&cabeza.getX()<=comida.getX()+20){
                    PartesSerp.add(cabeza.getLocation());
                    serp.add(new JButton());
                    snake++;
                    serp.get(snake).setContentAreaFilled(false);
                    serp.get(snake).setOpaque(true);
                    serp.get(snake).setBounds(new Rectangle (PartesSerp.get(snake),new Dimension(20,20)));
                    jPanel2.add(serp.get(snake));
                    
                    
                    for (int e =0; e <=serp.size()-1; e++){
                    x = (int)Math.floor(Math.random()*23);
                    y = (int)Math.floor(Math.random()*23);
                    
                    valido = (new Point (x*20,y*20).equals(serp.get(e).getLocation()));
                    if (!valido)break;
                    }
                    
                    comida.setLocation(x*20,y*20);
                    puntos++;
                    co=true;
                    }
                  }
                  break;
                    case 4:
                    cabeza.setLocation(cabeza.getX(),cabeza.getY()-20);
                    if (cabeza.getX()>=comida.getX()&cabeza.getX()<=comida.getX()+20){
                    if (cabeza.getY()>=comida.getY()&cabeza.getX()<=comida.getX()+20){
                    PartesSerp.add(cabeza.getLocation());
                    serp.add(new JButton());
                    snake++;
                    serp.get(snake).setContentAreaFilled(false);
                    serp.get(snake).setOpaque(true);
                    serp.get(snake).setBounds(new Rectangle (PartesSerp.get(snake),new Dimension(20,20)));
                    jPanel2.add(serp.get(snake));
                    
                    
                    for (int e =0; e <=serp.size()-1; e++){
                    x = (int)Math.floor(Math.random()*23);
                    y = (int)Math.floor(Math.random()*23);
                    
                    valido = (new Point (x*20,y*20).equals(serp.get(e).getLocation()));
                    if (!valido)break;
                    }
                   
                    comida.setLocation(x*20,y*20);
                    puntos++;
                    co=true;
                    }
                  }
                  break;
                  
            }
                
                for (int i = 0; i <= PartesSerp.size()-1; i++) {
                    if(cabeza.getLocation().equals(PartesSerp.get(i))){
                    contador++;
                    System.out.println(contador);
                    if(co){
                    if(contador==2){
                    JOptionPane.showMessageDialog(null,"Perdiste, Tus Puntos Son: "+puntos);
                    System.exit(0);
                    }
                    }else{
                    JOptionPane.showMessageDialog(null,"Perdiste, Tus Puntos Son: "+puntos);
                   System.exit(0);
                    }
                    }
                    
                }
                for (int i = 0; i <=serp.size()-1; i++) {
                    serp.get(i).setLocation(PartesSerp.get(i));
                }
                if (cabeza.getLocation().getX()>=500) {
                    JOptionPane.showMessageDialog(null,"Perdiste, Tus Puntos Son: "+puntos);
                    System.exit(0);
                }
                if (cabeza.getLocation().getY()>=500) {
                    JOptionPane.showMessageDialog(null,"Perdiste, Tus Puntos Son: "+puntos);
                    System.exit(0);
                }
                if (cabeza.getLocation().getX()<0) {
                    JOptionPane.showMessageDialog(null,"Perdiste, Tus Puntos Son: "+puntos);
                    System.exit(0);
                }
                if (cabeza.getLocation().getY()<0) {
                    JOptionPane.showMessageDialog(null,"Perdiste, Tus Puntos Son: "+puntos);
                    System.exit(0);
            }
        
        }
        
    };
        p.schedule(movimiento,0,100);
                }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();

        setBorder(null);
        setClosable(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Puntos");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 180, -1));

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));
        jPanel2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 798, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 688, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 800, 690));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 725, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 235, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        


    // Variables declaration - do not modify                     
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration                   

    @Override
    public void keyTyped(KeyEvent e) {
        
    }

    @Override
    public void keyPressed(KeyEvent e) {
        System.out.println("Pressed");
        if(e.getKeyCode()==KeyEvent.VK_UP){
        if(direccion!=3)
            direccion=4;
        }
        if(e.getKeyCode()==KeyEvent.VK_DOWN){
        if (direccion!=4)
            direccion=3;
        }
        if (e.getKeyCode()==KeyEvent.VK_LEFT){
        if (direccion!=1)
            direccion=2;
        }
        if (e.getKeyCode()==KeyEvent.VK_RIGHT){
        if (direccion!=2)
            direccion=1; 
    }
    }

    @Override
    public void keyReleased(KeyEvent e) {
        
    }
}
